BOOT_LOAD equ 0x7C00		;ブートプログラムのロード位置

ORG BOOT_LOAD			;ロードアドレスをアセンブラに指示 (1度しか指示できない)

;------------------------
;【マクロ】
;------------------------
%include "..\include\macro.s"

;****************************************************
;【エントリポイント】
;****************************************************

entry:


;----------------------------
;【BPB(BIOS Parameter Block)】
;----------------------------
jmp	ipl		;IPLへジャンプ
times 90 - ($ - $$) db 0x90


;----------------------------
;【IPL(Initial Program Loader)】
;----------------------------
ipl:
	cli			;割り込み処理に今は対応していないので、割り込み処理を禁止にする
	
	mov ax,0x0000		;AX = 0x0000
	mov ds,ax		;DS = 0x0000
	mov es,ax		;ES = 0x0000
	mov ss,ax		;SS = 0x0000
	mov sp,BOOT_LOAD	;SP = 0x7C00

	sti			;割り込み許可

	mov [BOOT.DRIVE],dl	;ブートドライブを保存
	
	;----------------
	;文字列を表示
	;----------------
	cdecl puts,.s0		;puts(.s0)
	
	;****************************************************
	;【外部記憶装置から2番目のセクタ(ブートロードの次のセクタ)を512バイト読み込む】
	; int 0x13 : セクタ読み出し(ahにファンクションコードを設定する)
	;		     0x02 : セクタ読み込み
	;		   　結果をCFビットに設定する(0=成功,1=失敗)
	;****************************************************
	mov ah,0x02			;	読み込みモードをセクタ読み込みに設定
	mov al,1			;	読み込むセクタ数を1に指定
	mov cx,0x0002		;	読み込むセクタを2番に指定(実際にセクタ指定に使うのはclレジスタの5バイト)
	mov dh,0x00			;	ヘッド位置を0に指定
	mov dl,[BOOT.DRIVE]	;	ドライブ番号を指定
	mov bx,0x7C00 + 512	;	読み込んだセクタを格納するバッファの先頭アドレスを指定(ブートコードの次に配置)
	int 0x13			;	BIOSサービス割り込みの読みだし命令を実行
							;if(CF = BIOS(0x13,0x12))
	.10Q:	jnc	.10E			;{							//	読み込みが失敗した場合
	.10T:	cdecl	puts,.e0		;	puts(.e0)
		call reboot				;	reboot();	//再起動
	.10E:						;}							//	読み込みが成功した場合

	;****************************************************
	;次のステージへ移行
	;****************************************************
	jmp stage_2					;	ブート処理の第2ステージへ

;----------------
;文字列の表示で表示するデータ
;----------------
.s0	db "Booting...",0x0A,0x0D,0		;//	.s0 = "Booting..." +"0x0A(ラインフィード)"+"0x0D(キャリッジリターン)";
.e0	db"Error:sector read",0x0A,0x0D,0

ALIGN 2,db 0			;データを2バイト境界で配置するように指示
BOOT:				;ブートドライブに関する情報
.DRIVE:		dw 0		;ドライブ番号

;------------------------
;【モジュール】
;------------------------
%include "..\modules\real\puts.s"
%include "..\modules\real\reboot.s"


;****************************************************
;【ブートフラグ】(先頭512バイトの終了)
;****************************************************
times 510 - ($ - $$) db 0x00
db 0x55,0xAA


;****************************************************
;【ブート処理の第2ステージ】
;****************************************************
stage_2:

	;--------------------------
	;文字列を表示
	;--------------------------
	cdecl puts,.s0


	;----------------
	;処理の終了
	;----------------
	jmp $			;while(1); // 無限ループ

	;----------------
	;データ
	;----------------
.s0 db "2nd stage...",0x0A,0x0D,0

;****************************************************
;パディング(このファイルは8Kバイト(512 * 16)とする)
;****************************************************
times (1024 * 8) -($ - $$)	db 0	;8Kバイト